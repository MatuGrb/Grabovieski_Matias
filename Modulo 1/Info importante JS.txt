 -Variables
var: Su valor puede cambiar (global)
let: Su valor puede cambiar (local)
const: Su valor NO puede cambiar (local)

 -Console
console.*algo*      
console.error('')
console.log('')     
console.warn('')

 -Salida
console.log(parametro);       (muestra por consola)
alert(parametro);             (muestra una ventana emergente)
document.write(parametro);    (muestra el contenido en la pagina pricipal)

 -Entrada
variable = prompt("mensaje"); (abre una ventana emergente con un mensaje, la variable almacena lo que ingrese el usuario)

 -Comentarios
// comentarios de una sola linea
/* 
   comentarios de varias líneas
*/

 -Operaciones
>Asignación  (=, +=, -=, *=, /=, %=, **=)
>Aritmeticas (+, -, *, **, /, %, ++, --)
>Comparación (==, ===, !=, !==, >, <, >=, <=)

 -Tipos de datos
los tipos de datos de las variables no se definen durante la declaración
(cualquier variable puede tener cualquier tipo de dato, no hace falta declararla)
(char, string, int, float, boolean, etc) 
las cadenas se pueden escribir con '' o ""

 -String
length: retorna la longitud de la cadena
ejemplo: console.log(var1.length);

slice(start,end): retorna la longitud desde el start hasta el end, si es negativo se cuenta desde el final
ejemplo: console.log(var1.slice(0,5));
	 console.log(var1.slice(-5));

substring(start,end): los valores iniciales y finales inferiores a 0 se tratan como 0
ejemplo: console.log(var1.substring(0,5));
	 console.log(var1.substring(-5));

substr(start,length): el segundo parámetro especifica la longitud de la parte extraída
ejemplo: console.log(var1.substring(2,5));
	 console.log(var1.substr(2,5));

replace(“original”,”nuevo”): reemplaza un valor especificado con otro valor en una cadena
-no cambia la cadena a la que se llama
-devuelve una nueva cadena
-reemplaza solo la primera coincidencia
ejemplo: console.log(var1);
	 console.log(var1.replace("e","E"));

toUpperCase(): convierte una cadena a mayusculas 
ejemplo: console.log(var1.toUpperCase());

toLowerCase(): convierte una cadena a minusculas 
ejemplo: console.log(var1.toLowerCase());

indexOf(): devuelve el índice de la primer aparición de un texto específico en una cadena
ejemplo: console.log(var1.indexOf(""));

lastIndexOf(): devuelve el índice de la última aparición de un texto en una cadena
ejemplo: console.log(var1.lastIndexOf(""));

startsWith(): devuelve true si la cadena comienza con el texto especificado en el parámetro
ejemplo: console.log(var1.startsWith(""));

endsWith(): devuelve true si la cadena finaliza con el texto especificado en el parámetro
ejemplo: console.log(var1.endsWith(""));

 -Arrays (pag 25) (var)
contiene más de un valor, almacenando valores en distintas posiciones del array

 -Date (pag 27) (var)
representa una fecha

 -Estructuras de Control
(if, else, else if, switch, for, while, do while)

 -Funciones
ejemplo:
function name(parameter1, parameter2, parameter3) 
{
  *code*
  return var
  // la funcion corta cuando hay un return, si hubiese mas codigo despues del return no se ejecuta 
}

 -Manejo de errores
try: define un bloque de código para ejecutar (para probar)
catch: define un bloque de código para manejar cualquier error
finally: define un bloque de código para ejecutar independientemente del resultado
throw: define un error personalizado

 -Formato JSON (var)
JSON (JavaScript Object Notation)
Es un formato ligero de intercambio de datos
JSON se basa en un subconjunto del lenguaje de programación JavaScript

Para escribir objetos JSON debemos tener en cuenta lo siguiente:
Los datos están separados por comas
Los datos se escriben en pares, siendo primero el nombre y luego el valor del dato
Los objetos JSON están rodeados por llaves “{}”
Los corchetes “[ ]” guardan arreglos, incluyendo otros objetos JSON

Tipos de datos JSON: cadena, número, booleano, nulo, objeto, matriz

Nulo es un valor vacío 
Cuando no hay ningún valor que asignar a una clave, se puede tratar como nulo

El objeto JSON es un conjunto de pares de nombres o valores insertados entre llaves {}
Las claves deben ser cadenas y únicas, separadas por comas

Una matriz es una recopilación ordenada de valores
En JSON, los valores de matriz deben ser cadena, número, booleano, nulo, objeto o matriz

var persona =
{
	"Matias":
	{
		"DNI": 46553248,
		"Domicilio": "Posadas, Misiones",
		"Telefono": [123, 456]
	}
}

 -Programacion Orientada a Objetos (POO)

clases
instancia
objetos
atributos
metodos
constructor();
herencia (clase padre-clase hijo)
extends
super();
super.*metodo*();
static